# Generated by Django 5.1.1 on 2024-09-09 14:40

import books.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authors', '0002_alter_author_nationality'),
        ('genres', '0001_initial'),
        ('publishers', '0002_remove_publisher_website'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, null=True, validators=[django.core.validators.MinLengthValidator(3, 'A descrição deve ter, no mínimo, 3 caracteres.'), django.core.validators.MaxLengthValidator(800, 'A descrição do livro não pode ultrapassar 800 caracteres.')], verbose_name='Descrição')),
                ('photo', models.ImageField(upload_to='book-photos', verbose_name='Foto')),
                ('release_date', models.DateField(validators=[books.validators.MaxDateValidator(1024 * 1024, 'O ano não pode ser maior do que o atual.')], verbose_name='Data de Lançamento')),
                ('authors', models.ManyToManyField(related_name='books', to='authors.author', verbose_name='Autores')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', to='genres.genre', verbose_name='Gênero')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='books', to='publishers.publisher', verbose_name='Editora')),
            ],
            options={
                'verbose_name': 'Livro',
            },
        ),
        migrations.CreateModel(
            name='BookReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'O valor mínimo de avaliação é 0.'), django.core.validators.MaxValueValidator(5, 'O valor máximo de avaliação é 5.')], verbose_name='Avaliação')),
                ('comment', models.TextField(validators=[django.core.validators.MinLengthValidator(3, 'Comentário deve ter, no mínimo, 3 caracteres.'), django.core.validators.MaxLengthValidator(500, 'Comentário não pode ter mais de 500 caracteres.')], verbose_name='Comentário')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='books.book', verbose_name='Livro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Avaliações',
                'constraints': [models.UniqueConstraint(fields=('user', 'book'), name='unique_user_book_review')],
            },
        ),
    ]
